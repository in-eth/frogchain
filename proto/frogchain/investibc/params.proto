syntax = "proto3";
package frogchain.investibc;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "frogchain/x/investibc/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  
  string adminAccount = 1 [(gogoproto.moretags) = "yaml:\"admin_account\""];
  
  string depositDenom = 2 [(gogoproto.moretags) = "yaml:\"deposit_denom\""];
  
  cosmos.base.v1beta1.Coin currentDepositAmount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_deposit_amount\""
  ];
  
  string liquidityDenom = 4 [(gogoproto.moretags) = "yaml:\"liquidity_denom\""];
  
  uint64 lockTokenTimestamp = 5;
  
  uint64 depositLastTime = 6;
  string icaConnectionId = 7;
  bool depositTokenToICAPacketSend = 8;
  bool joinSwapExactAmountInPacketSend = 9; // broadcasted ICA tx to bootstrap Osmosis LP
  bool lockTokensPacketSend = 10; // set as true once Osmosis liquidity created
  bool unLockLiquidityPacketSend = 11; // set as true once deposit token sent to ica
  bool claimRewardPacketSend = 12; // set as true once deposit token sent to ica
  bool depositTokenToICAPacketSent = 13;
  bool joinSwapExactAmountInPacketSent = 14; // broadcasted ICA tx to bootstrap Osmosis LP
  bool lockTokensPacketSent = 15; // set as true once Osmosis liquidity created
  bool unLockLiquidityPacketSent = 16; // set as true once deposit token sent to ica
  bool claimRewardPacketSent = 17; // set as true once deposit token sent to ica
}
