syntax = "proto3";

package frogchain.investibc;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "frogchain/x/investibc/types";

// Msg defines the Msg service.
service Msg {
  rpc SetAdminAccount   (MsgSetAdminAccount  ) returns (MsgSetAdminAccountResponse  );
  rpc Deposit           (MsgDeposit          ) returns (MsgDepositResponse          );
  rpc InitIcaAccount    (MsgInitIcaAccount   ) returns (MsgInitIcaAccountResponse   );
  rpc SetDepositDenom   (MsgSetDepositDenom  ) returns (MsgSetDepositDenomResponse  );
  rpc Withdraw          (MsgWithdraw         ) returns (MsgWithdrawResponse         );
  rpc SetLiquidityDenom (MsgSetLiquidityDenom) returns (MsgSetLiquidityDenomResponse);
}
message MsgSetAdminAccount {
  string creator      = 1;
  string adminAccount = 2;
}

message MsgSetAdminAccountResponse {}

message MsgDeposit {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin amount  = 2 [(gogoproto.nullable) = false];
}

message MsgDepositResponse {}

message MsgInitIcaAccount {
  string creator      = 1;
  string connectionId = 2;
}

message MsgInitIcaAccountResponse {}

message MsgSetDepositDenom {
  string creator = 1;
  string denom   = 2;
}

message MsgSetDepositDenomResponse {}

message MsgWithdraw {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin amount  = 2 [(gogoproto.nullable) = false];
}

message MsgWithdrawResponse {}

message MsgSetLiquidityDenom {
  string creator = 1;
  string denom   = 2;
}

message MsgSetLiquidityDenomResponse {}

