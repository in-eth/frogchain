syntax = "proto3";

package frogchain.amm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "frogchain/amm/params.proto";
import "frogchain/amm/pool.proto";

option go_package = "frogchain/x/amm/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/frogchain/amm/params";
  
  }
  
  // Queries a list of Pool items.
  rpc Pool    (QueryGetPoolRequest) returns (QueryGetPoolResponse) {
    option (google.api.http).get = "/frogchain/amm/pool/{id}";
  
  }
  rpc PoolAll (QueryAllPoolRequest) returns (QueryAllPoolResponse) {
    option (google.api.http).get = "/frogchain/amm/pool";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPoolRequest {
  uint64 id = 1;
}

message QueryGetPoolResponse {
  Pool Pool = 1 [(gogoproto.nullable) = false];
}

message QueryAllPoolRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPoolResponse {
  repeated Pool                                   Pool       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

